{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","callback","onChange","PersonForm","addName","handleNameInputChange","newName","handleNumberInputChange","newNumber","onSubmit","value","type","Person","person","deleteNumber","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","filtered","setNumbersToShow","setMessage","messageType","setMessageType","useEffect","phonebookService","phonebook","event","numbersToShow","target","forEach","toUpperCase","includes","push","preventDefault","isNewEntry","newNameObject","length","newEntry","concat","setTimeout","window","confirm","find","p","changedPerson","updatedPerson","map","filter","catch","error","ReactDOM","render","document","getElementById"],"mappings":"4KAUeA,EARA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACI,qDACoB,uBAAOC,SAAUD,QCa5BE,EAhBI,SAAC,GAAoF,IAAlFC,EAAiF,EAAjFA,QAASC,EAAwE,EAAxEA,sBAAuBC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,wBAAyBC,EAAe,EAAfA,UACpF,OACI,uBAAMC,SAAUL,EAAhB,UACI,yCACM,uBAAOF,SAAYG,EAAuBK,MAASJ,OAEzD,2CACQ,uBAAOJ,SAAYK,EAAyBG,MAASF,OAE7D,8BACA,wBAAQG,KAAK,SAAb,uBCFGC,EARA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aACrB,OACI,gCACKD,EAAOE,KADZ,IACmBF,EAAOG,OAD1B,IACkC,wBAAQC,QAASH,EAAjB,wB,gBCJpCI,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACG,GAEZ,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCL5BM,EAbM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASnB,EAAW,EAAXA,KAC7B,OAAgB,OAAZmB,EAEO,KAIP,qBAAKC,UAAoB,YAATpB,EAAqBA,EAAO,QAA5C,SACKmB,KCkIEE,EApIH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAO3B,EAAP,KAAgB8B,EAAhB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOzB,EAAP,KAAkB6B,EAAlB,KACA,EAAqCJ,mBAASC,GAA9C,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA8BN,mBAAS,MAAvC,mBAAOH,EAAP,KAAgBU,EAAhB,KACA,EAAsCP,mBAAS,MAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRC,IACGvB,MAAK,SAAAwB,GACJV,EAAWU,GACXN,EAAiBM,QAEpB,IA8FH,OACE,gCACE,2CACA,cAAC,EAAD,CAAcf,QAASA,EAASnB,KAAM8B,IACtC,cAAC,EAAD,CAAQxC,SAtCe,SAAC6C,GAC1B,IAAIC,EAAgB,GACM,KAAvBD,EAAME,OAAOtC,MAEdqC,EAAgBb,GAIhBa,EAAgB,GAChBb,EAAQe,SAAQ,SAAApC,GACVA,EAAOE,KAAKmC,cAAcC,SAASL,EAAME,OAAOtC,MAAMwC,gBAExDH,EAAcK,KAAKvC,OAIzB0B,EAAiBQ,MAuBf,kDACA,cAAC,EAAD,CACE3C,QAnGU,SAAC0C,GACfA,EAAMO,iBAEN,IAAIC,GAAa,EASjB,GAPApB,EAAQe,SAAQ,SAAApC,GACVA,EAAOE,OAAST,IAElBgD,GAAa,MAIbA,EACJ,CACE,IAAIC,EAAgB,CAACxC,KAAMT,EAASU,OAAQR,EAAWkB,GAAIQ,EAAQsB,OAAS,GAC5EZ,EAAwBW,GACrBlC,MAAK,SAAAoC,GACJtB,EAAWD,EAAQwB,OAAOD,IAE1Bf,EAAe,WACfF,EAAW,GAAD,OAAIlC,EAAJ,qCACVqD,YAAW,WACTnB,EAAW,QACV,KAEHJ,EAAW,IACXC,EAAa,YAKjB,GAAGuB,OAAOC,QAAP,UAAkBvD,EAAlB,wEACH,CACE,IAAMO,EAASqB,EAAQ4B,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,OAAST,KACtC0D,EAAa,2BAAOnD,GAAP,IAAeG,OAAQR,IAE1CoC,EAAwB/B,EAAOa,GAAIsC,GAChC3C,MAAK,SAAA4C,GACJ9B,EAAWD,EAAQgC,KAAI,SAAAH,GAAC,OAAIA,EAAErC,KAAOb,EAAOa,GAAKqC,EAAIE,MACrDvB,EAAe,WACfF,EAAW,GAAD,OAAIlC,EAAJ,6BACVqD,YAAW,WACTnB,EAAW,QACV,UAwDanC,sBAjDI,SAACyC,GAC7BV,EAAWU,EAAME,OAAOtC,QAgDgDH,wBA7C1C,SAACuC,GAC/BT,EAAaS,EAAME,OAAOtC,QA6CtBJ,QAAWA,EAASE,UAAaA,IAEnC,yCACA,6BACG8B,EAAS4B,KAAI,SAAArD,GAAM,OAClB,cAAC,EAAD,CAEEA,OAAQA,EACRC,aAAc,kBA/BFY,EA+BqBb,EAAOa,GA/BxBX,EA+B4BF,EAAOE,UA9BxD6C,OAAOC,QAAQ,mBAEhBjB,EAAwBlB,GAAIL,KAAKc,EAAWD,EAAQiC,QAAO,SAAAtD,GAAM,OAAIA,EAAOa,KAAOA,OAClF0C,OAAM,SAAAC,GACL3B,EAAe,SACfF,EAAW,GAAD,OAAIzB,EAAJ,iDACV4C,YAAW,WACTnB,EAAW,QACV,KACHL,EAAWD,EAAQiC,QAAO,SAAAJ,GAAC,OAAIA,EAAErC,KAAOA,UAVzB,IAACA,EAAIX,IA6BTF,EAAOa,a,MC9H1B4C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e92642f5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ callback }) => {\r\n  return (\r\n      <div>\r\n        Filter shown with <input onChange={callback} />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ addName, handleNameInputChange, newName, handleNumberInputChange, newNumber}) => {\r\n    return (\r\n        <form onSubmit={addName}>\r\n            <div>\r\n            name: <input onChange = {handleNameInputChange} value = {newName}/>\r\n            </div>\r\n            <div>\r\n            number: <input onChange = {handleNumberInputChange} value = {newNumber}/>\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({person, deleteNumber}) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number} <button onClick={deleteNumber}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null)\r\n    {\r\n        return null\r\n    }\r\n    \r\n    return (\r\n        <div className={type === 'message' ? type : 'error'}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport phonebookService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filtered, setNumbersToShow] = useState(persons)\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState(null)\n\n  useEffect(() => {\n    phonebookService.getAll()\n      .then(phonebook => {\n        setPersons(phonebook)\n        setNumbersToShow(phonebook)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    \n    let isNewEntry = true\n    \n    persons.forEach(person => {\n      if (person.name === newName)\n      {\n        isNewEntry = false\n      }\n    })\n\n    if (isNewEntry)\n    {\n      let newNameObject = {name: newName, number: newNumber, id: persons.length + 1}\n      phonebookService.create(newNameObject)\n        .then(newEntry => {\n          setPersons(persons.concat(newEntry))\n\n          setMessageType('message')\n          setMessage(`${newName} has beed added to the phonebook`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n    else\n    {\n      if(window.confirm(`${newName} already exists in the phonebook. Do you want to update the number?`))\n      {\n        const person = persons.find(p => p.name === newName)\n        const changedPerson = {...person, number: newNumber}\n\n        phonebookService.update(person.id, changedPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(p => p.id !== person.id ? p : updatedPerson))\n            setMessageType('message')\n            setMessage(`${newName} number has been changed`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n\n          })\n      }\n    }\n  }\n\n  const handleNameInputChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberInputChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    let numbersToShow = []\n    if(event.target.value === '')\n    {\n      numbersToShow = persons;\n    }\n    else\n    {\n      numbersToShow = []\n      persons.forEach(person => {\n        if (person.name.toUpperCase().includes(event.target.value.toUpperCase()))\n        {\n          numbersToShow.push(person)\n        }\n      })\n    }\n    setNumbersToShow(numbersToShow)\n  }\n\n  const deleteNumber = (id, name) => {\n    if(window.confirm('Delete number?'))\n    {\n      phonebookService.remove(id).then(setPersons(persons.filter(person => person.id !== id)))\n      .catch(error => {\n        setMessageType('error')\n        setMessage(`${name} has already been deleted from the phonebook`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        setPersons(persons.filter(p => p.id !== id))\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType}/>\n      <Filter callback={handleFilterChange}/>\n      <h2>Add a new number</h2>\n      <PersonForm \n        addName = {addName} handleNameInputChange = {handleNameInputChange} handleNumberInputChange = {handleNumberInputChange}\n        newName = {newName} newNumber = {newNumber}\n      />\n      <h2>Numbers</h2>\n      <ul>\n        {filtered.map(person => \n          <Person \n            key = {person.id}\n            person={person}\n            deleteNumber={() => deleteNumber(person.id, person.name)}\n          />\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}